INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:00 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:04 [__init__.py:253] Automatically detected platform cuda.
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'embed', 'generate', 'reward', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'classify', 'reward', 'generate', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'embed', 'generate', 'reward', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'generate', 'embed', 'classify', 'reward'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'generate', 'reward', 'embed', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:07 [config.py:852] This model supports multiple tasks: {'reward', 'generate', 'embed', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:07 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:08 [config.py:852] This model supports multiple tasks: {'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:08 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:08 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:08 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:08 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:09 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:10 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
INFO 08-02 21:15:11 [config.py:852] This model supports multiple tasks: {'embed', 'generate', 'classify', 'reward'}. Defaulting to 'generate'.
INFO 08-02 21:15:11 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:11 [config.py:852] This model supports multiple tasks: {'generate', 'reward', 'classify', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:11 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:11 [config.py:852] This model supports multiple tasks: {'classify', 'reward', 'generate', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:11 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:11 [config.py:852] This model supports multiple tasks: {'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 08-02 21:15:11 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:11 [config.py:852] This model supports multiple tasks: {'reward', 'embed', 'generate', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:11 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:12 [config.py:852] This model supports multiple tasks: {'reward', 'generate', 'embed', 'classify'}. Defaulting to 'generate'.
INFO 08-02 21:15:12 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:12 [config.py:852] This model supports multiple tasks: {'generate', 'classify', 'embed', 'reward'}. Defaulting to 'generate'.
INFO 08-02 21:15:12 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:12 [config.py:852] This model supports multiple tasks: {'embed', 'classify', 'reward', 'generate'}. Defaulting to 'generate'.
INFO 08-02 21:15:12 [config.py:1500] Using max model len 32768
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
INFO 08-02 21:15:12 [config.py:2003] Token parallelism enabled with token_parallel_size=2
INFO 08-02 21:15:12 [config.py:2043] Disabling V1 multiprocessing for external launcher.
INFO 08-02 21:15:12 [config.py:2341] Chunked prefill is enabled with max_num_batched_tokens=16384.
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:13 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:14 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
LLMEngine init v1
INFO 08-02 21:15:14 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7641+g15cd200) with config: model='meta-llama/Llama-3.1-8B', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=auto, tensor_parallel_size=8, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=1, served_model_name=meta-llama/Llama-3.1-8B, num_scheduler_steps=1, multi_step_stream_outputs=True,enable_prefix_caching=True, chunked_prefill_enabled=True,use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [parallel_state.py:1051] Token parallelism enabled: token_parallel_size=2, data_parallel_size=1
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:22 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:15:22 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:15:26 [custom_all_reduce_utils.py:208] generating GPU P2P access cache in /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:15:27 [custom_all_reduce_utils.py:208] generating GPU P2P access cache in /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:13 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/user/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3,4,5,6,7.json
INFO 08-02 21:16:14 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer_handle=(7, 4194304, 6, 'psm_027a460e'), local_subscribe_addr='ipc:///tmp/b325495d-4119-4286-bdef-c3817a969083', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-02 21:16:14 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3, 4, 5, 6, 7], buffer_handle=(7, 4194304, 6, 'psm_2002a2de'), local_subscribe_addr='ipc:///tmp/3219f309-ace4-4b8a-b0b9-9c2c84751875', remote_subscribe_addr=None, remote_addr_ipv6=False)
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [__init__.py:1344] Found nccl from library libnccl.so.2
INFO 08-02 21:16:14 [pynccl.py:70] vLLM is using nccl==2.26.2
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 0 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 2 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 2, EP rank 2, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 3 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 3, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 1 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 4 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 4, EP rank 4, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 5 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 5, EP rank 5, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 6 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 6, EP rank 6, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 7 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 7, EP rank 7, TKNP rank 0
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 9 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 9, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 10 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 2, EP rank 10, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 11 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 11, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 15 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 7, EP rank 15, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 8 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 8, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 12 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 4, EP rank 12, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 14 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 6, EP rank 14, TKNP rank 1
INFO 08-02 21:16:14 [parallel_state.py:1157] rank 13 in world size 16 is assigned as DP rank 0, PP rank 0, TP rank 5, EP rank 13, TKNP rank 1
Worker Rank 6 (PID: 645013) - Parallel Groups:
Rank 6: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 6: Pipeline Parallel: [6]
Rank 6: Data Parallel: [6]
Rank 6: Token Parallel: [6, 14]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 5 (PID: 645012) - Parallel Groups:
Rank 5: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 5: Pipeline Parallel: [5]
Rank 5: Data Parallel: [5]
Rank 5: Token Parallel: [5, 13]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 2 (PID: 645009) - Parallel Groups:
Rank 2: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 2: Pipeline Parallel: [2]
Rank 2: Data Parallel: [2]
Rank 2: Token Parallel: [2, 10]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 7 (PID: 645014) - Parallel Groups:
Rank 7: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 7: Pipeline Parallel: [7]
Rank 7: Data Parallel: [7]
Rank 7: Token Parallel: [7, 15]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 3 (PID: 645010) - Parallel Groups:
Rank 3: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 3: Pipeline Parallel: [3]
Rank 3: Data Parallel: [3]
Rank 3: Token Parallel: [3, 11]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 0 (PID: 645007) - Parallel Groups:
Rank 0: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 0: Pipeline Parallel: [0]
Rank 0: Data Parallel: [0]
Rank 0: Token Parallel: [0, 8]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 4 (PID: 645011) - Parallel Groups:
Rank 4: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 4: Pipeline Parallel: [4]
Rank 4: Data Parallel: [4]
Rank 4: Token Parallel: [4, 12]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 1 (PID: 645008) - Parallel Groups:
Rank 1: Tensor Parallel: [0, 1, 2, 3, 4, 5, 6, 7]
Rank 1: Pipeline Parallel: [1]
Rank 1: Data Parallel: [1]
Rank 1: Token Parallel: [1, 9]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 9 (PID: 1759249) - Parallel Groups:
Rank 9: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 9: Pipeline Parallel: [9]
Rank 9: Data Parallel: [9]
Rank 9: Token Parallel: [1, 9]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 14 (PID: 1759254) - Parallel Groups:
Rank 14: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 14: Pipeline Parallel: [14]
Rank 14: Data Parallel: [14]
Rank 14: Token Parallel: [6, 14]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 8 (PID: 1759248) - Parallel Groups:
Rank 8: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 8: Pipeline Parallel: [8]
Rank 8: Data Parallel: [8]
Rank 8: Token Parallel: [0, 8]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 10 (PID: 1759250) - Parallel Groups:
Rank 10: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 10: Pipeline Parallel: [10]
Rank 10: Data Parallel: [10]
Rank 10: Token Parallel: [2, 10]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 15 (PID: 1759255) - Parallel Groups:
Rank 15: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 15: Pipeline Parallel: [15]
Rank 15: Data Parallel: [15]
Rank 15: Token Parallel: [7, 15]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 11 (PID: 1759251) - Parallel Groups:
Rank 11: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 11: Pipeline Parallel: [11]
Rank 11: Data Parallel: [11]
Rank 11: Token Parallel: [3, 11]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 12 (PID: 1759252) - Parallel Groups:
Rank 12: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 12: Pipeline Parallel: [12]
Rank 12: Data Parallel: [12]
Rank 12: Token Parallel: [4, 12]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
Worker Rank 13 (PID: 1759253) - Parallel Groups:
Rank 13: Tensor Parallel: [8, 9, 10, 11, 12, 13, 14, 15]
Rank 13: Pipeline Parallel: [13]
Rank 13: Data Parallel: [13]
Rank 13: Token Parallel: [5, 13]
GPUWorker init
WARNING 08-02 21:16:14 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1732] Starting to load model meta-llama/Llama-3.1-8B...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:14 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [gpu_model_runner.py:1737] Loading model from scratch...
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [cuda.py:295] Using Flash Attention backend on V1 engine.
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:15 [weight_utils.py:296] Using model weights format ['*.safetensors']
INFO 08-02 21:16:23 [default_loader.py:272] Loading weights took 6.69 seconds
INFO 08-02 21:16:23 [default_loader.py:272] Loading weights took 6.41 seconds
INFO 08-02 21:16:23 [default_loader.py:272] Loading weights took 7.34 seconds
INFO 08-02 21:16:23 [default_loader.py:272] Loading weights took 7.50 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 8.25 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.05 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 6.14 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.98 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 8.976921 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 8.992588 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.032704 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 8.819965 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 8.865114 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.085584 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.041528 seconds
INFO 08-02 21:16:24 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 8.846081 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.43 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 8.96 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 8.67 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.14 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.92 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 6.83 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 8.23 seconds
INFO 08-02 21:16:24 [default_loader.py:272] Loading weights took 7.78 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.730091 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.515521 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.475479 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.488039 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.766376 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.743262 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.469718 seconds
INFO 08-02 21:16:25 [gpu_model_runner.py:1763] Model loading took 1.9029 GiB and 9.546732 seconds
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_5_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.39 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_6_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.35 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_3_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.40 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_2_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.44 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_7_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.39 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_0_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.45 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_1_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.50 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_4_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.43 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_15_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.45 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_14_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_10_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.49 s
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.50 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_13_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.43 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_11_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_9_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.50 s
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.49 s
INFO 08-02 21:16:29 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_12_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:29 [backends.py:540] Dynamo bytecode transform time: 4.48 s
INFO 08-02 21:16:30 [backends.py:529] Using cache directory: /home/user/.cache/vllm/torch_compile_cache/6c3a772ed7/rank_8_0/backbone for vLLM's torch.compile
INFO 08-02 21:16:30 [backends.py:540] Dynamo bytecode transform time: 4.48 s
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:31 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:32 [backends.py:193] Cache the graph for dynamic shape for later use
INFO 08-02 21:16:47 [backends.py:214] Compiling a graph for dynamic shape takes 18.13 s
INFO 08-02 21:16:47 [backends.py:214] Compiling a graph for dynamic shape takes 18.34 s
INFO 08-02 21:16:47 [backends.py:214] Compiling a graph for dynamic shape takes 18.35 s
INFO 08-02 21:16:47 [backends.py:214] Compiling a graph for dynamic shape takes 18.48 s
INFO 08-02 21:16:47 [backends.py:214] Compiling a graph for dynamic shape takes 18.43 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.67 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.76 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.68 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.56 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.65 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.63 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.69 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.70 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.74 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.76 s
INFO 08-02 21:16:48 [backends.py:214] Compiling a graph for dynamic shape takes 18.53 s
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 23.20 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 22.52 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 22.74 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 22.70 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 22.88 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 23.12 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 23.18 s in total
INFO 08-02 21:16:53 [monitor.py:34] torch.compile takes 22.86 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.10 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.19 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.21 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.14 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.23 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.01 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.19 s in total
INFO 08-02 21:16:54 [monitor.py:34] torch.compile takes 23.01 s in total
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 62.30 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.93 GiB
INFO 08-02 21:16:56 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.93 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 61.83 GiB
INFO 08-02 21:16:57 [gpu_worker.py:318] Available KV cache memory: 62.30 GiB
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:16:57 [kv_cache_utils.py:716] GPU KV cache size: 4,052,352 tokens
INFO 08-02 21:16:57 [kv_cache_utils.py:720] Maximum concurrency for 32,768 tokens per request: 123.67x
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:22 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:23 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 25 secs, took 0.59 GiB
INFO 08-02 21:17:23 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.08 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 57.82 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.04 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.03 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 57.99 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.05 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.05 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 58.07 seconds
INFO 08-02 21:17:23 [custom_all_reduce.py:196] Registering 4355 cuda graph addresses
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [gpu_model_runner.py:2291] Graph capturing finished in 26 secs, took 0.59 GiB
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.34 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.30 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.31 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.27 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.34 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.35 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.35 seconds
INFO 08-02 21:17:23 [core.py:172] init engine (profile, create kv cache, warmup model) took 59.38 seconds
LLM initialized with tensor_parallel_size=8, pipeline_parallel_size=1, data_parallel_size=1, token_parallel_size=2, enable_token_parallel=True
--------------------------------------------------
Prompt: 'Hello, my name is'
Generated text: ' Hilary and I have been a full time Licensed Massage Therapist since 199'

--------------------------------------------------
Prompt: 'The president of the United States is'
Generated text: ' a leader of the free world. His actions and statements have a direct impact on'

--------------------------------------------------
Prompt: 'The capital of France is'
Generated text: ' the largest city in the country and a major European metropolis. It is also'

--------------------------------------------------
Prompt: 'The future of AI is'
Generated text: ' not as smart as you think\nAI is a clever word. It conjures'

--------------------------------------------------
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
NCCL version 2.26.2+cuda12.2
